spring.application.name=user-service
server.port=9000

eureka.client.service-url.defaultZone=http://localhost:8671/eureka/


spring.datasource.url=jdbc:postgresql://localhost:5432/authentication-db
spring.datasource.username=postgres
spring.datasource.password=8384
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true


jwt.secret=${SECRET_KEY}

# OAuth2 configuration
# google
spring.security.oauth2.client.registration.google.clientId=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=google-client-1
spring.security.oauth2.client.registration.google.provider=google
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=profile,email,openid
spring.security.oauth2.authorizationserver.endpoint.jwk-set-uri=https://localhost:9000/.well-known/jwks.json

